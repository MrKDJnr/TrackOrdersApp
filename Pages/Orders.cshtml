@page
@model TrackOrdersApp.Pages.OrdersModel
@using TrackOrdersApp.Models

@{
    ViewData["Title"] = "Orders";
}

<div class="container mt-4">
    <h2 class="mb-4"><i class="fas fa-box"></i> Orders</h2>

    <!-- Filter Panel -->
    <form method="get" class="row g-3 border rounded p-3 mb-4 bg-light">
        <div class="col-md-3">
            <label class="form-label">Status</label>
            <select class="form-select" name="Status">
                <option value="">All</option>
                @foreach (var s in Enum.GetNames(typeof(OrderStatus)))
                {
                    <option value="@s" selected="@((s == Model.Status) ? "selected" : null)">@s</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <label class="form-label">From Date</label>
            <input type="date" class="form-control" name="FromDate" value="@Model.FromDate?.ToString("yyyy-MM-dd")" />
        </div>
        <div class="col-md-3">
            <label class="form-label">To Date</label>
            <input type="date" class="form-control" name="ToDate" value="@Model.ToDate?.ToString("yyyy-MM-dd")" />
        </div>
        <div class="col-md-3">
            <label class="form-label">Min Total</label>
            <input type="number" step="0.01" class="form-control" name="MinTotal" value="@Model.MinTotal" />
        </div>
        <div class="col-md-3">
            <label class="form-label">Max Total</label>
            <input type="number" step="0.01" class="form-control" name="MaxTotal" value="@Model.MaxTotal" />
        </div>
        <div class="col-md-3 align-self-end">
            <button type="submit" class="btn btn-primary w-100"><i class="fas fa-filter"></i> Apply Filters</button>
        </div>
    </form>

    <!-- Orders Table -->
    <table class="table table-bordered table-hover align-middle">
        <thead class="table-dark">
            <tr>
                <th></th>
                <th>Order ID</th>
                <th>Customer</th>
                <th>Status</th>
                <th>Total</th>
                <th>Created</th>
                <th>Action</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var order in Model.FilteredOrders)
            {
                var detailId = $"details-{order.Id}";
                <tr class="order-row" style="cursor: pointer;" onclick="toggleDetails('@detailId')">
                    <td class="text-center"><i class="fas fa-angle-down text-secondary"></i></td>
                    <td>@order.Id</td>
                    <td>@order.CustomerName</td>
                    <td>
                        @switch (order.Status)
                        {
                            case OrderStatus.Pending:
                                <span class="badge bg-warning text-dark"><i class="fas fa-clock"></i> Pending</span>
                                ; break;
                            case OrderStatus.Processing:
                                <span class="badge bg-info text-dark"><i class="fas fa-cogs"></i> Processing</span>
                                ; break;
                            case OrderStatus.Shipped:
                                <span class="badge bg-primary"><i class="fas fa-truck"></i> Shipped</span>
                                ; break;
                            case OrderStatus.Cancelled:
                                <span class="badge bg-danger"><i class="fas fa-times"></i> Cancelled</span>
                                ; break;
                            case OrderStatus.Paid:
                                <span class="badge bg-success"><i class="fas fa-check-circle"></i> Paid</span>
                                ; break;
                        }
                    </td>
                    <td>@order.Total.ToString("C")</td>
                    <td>@order.CreatedDate.ToString("yyyy-MM-dd")</td>
                    <td>
                        @if (order.Status != OrderStatus.Paid)
                        {
                            <button class="btn btn-sm btn-success" onclick="markAsPaid(@order.Id, this)">
                                <i class="fas fa-check"></i> Mark as Paid
                            </button>
                        }
                        else
                        {
                            <span class="text-success"><i class="fas fa-check-circle"></i> Paid</span>
                        }
                    </td>
                </tr>

                <!-- Detail row -->
                <tr id="@detailId" class="details-row" style="display: none;">
                    <td colspan="6" class="bg-light">
                        <strong>Line Items:</strong>
                        <table class="table table-sm table-bordered mt-2">
                            <thead class="table-secondary">
                                <tr>
                                    <th>Product</th>
                                    <th>Quantity</th>
                                    <th>Unit Price</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in order.Items)
                                {
                                    <tr>
                                        <td>@item.ProductName</td>
                                        <td>@item.Quantity</td>
                                        <td>@item.UnitPrice.ToString("C")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        function toggleDetails(id) {
            const row = document.getElementById(id);
            row.style.display = row.style.display === 'none' ? '' : 'none';
        }

        async function markAsPaid(orderId, button) {
            try {
                const response = await fetch(`/Orders?handler=MarkPaid&id=${orderId}`, {
                    method: 'POST'
                });

                if (response.ok) {
                 
                    button.parentElement.innerHTML = '<span class="text-success"><i class="fas fa-check-circle"></i> Paid</span>';

             
                    const row = button.closest('tr');
                    const statusCell = row.children[3];
                    statusCell.innerHTML = '<span class="badge bg-success"><i class="fas fa-check-circle"></i> Paid</span>';
                } else {
                    alert("Failed to mark as paid.");
                }
            } catch (err) {
                console.error(err);
                alert("Error occurred while updating.");
            }
        }
    </script>

}
